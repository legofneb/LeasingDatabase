@using aulease.Entities;

<div class="row">
    
    <div class="col-lg-4">
        <h4><i class="fa fa-plus"></i> Add Component: </h4>
    </div>
    <div class="col-lg-8">
        <button type="button" id="changeConfigAddCPU" class="btn btn-default"><i class="fa fa-hdd-o fa-2x"></i> <br />CPU</button>
        <button type="button" id="changeConfigAddLaptop" class="btn btn-default"><i class="fa fa-laptop fa-2x"></i> <br />Laptop</button>
        <button type="button" id="changeConfigAddMonitor" class="btn btn-default"><i class="fa fa-desktop fa-2x"></i> <br />Monitor</button>
        <button type="button" id="changeConfigAddOther" class="btn btn-default"><i class="fa fa-asterisk fa-2x"></i> <br />Other</button>
    </div>
</div>
<hr />

@foreach (var comp in ViewBag.comps as List<Component>)
{
    if (comp.Type != null)
    {
        @Html.Raw(Html.Row(Html.Column("col-lg-2", Html.IconFromType(comp.Type.ToEnum(), "fa-4x")) + 
                           Html.Column("col-lg-10", @"<form class=""form-horizontal"" role=""form"">
                                                        <div class=""form-group"">
                                                            <label class=""col-sm-2 col-md-2 col-lg-2 control-label"">Type</label>
                                                            <div class=""col-sm-10 col-md-10 col-lg-10"">
                                                                <select class=""form-control"" id=""changeConfigType" + ((List<Component>)ViewBag.comps).IndexOf(comp).ToString() + @""">" +
                                                                     OptionTypes(((List<Component>)ViewBag.comps).IndexOf(comp), comp.Type) +
                                                                @"</select>
                                                            </div>
                                                        </div>
                                                      </form>")));
    
    @Html.Raw("<hr />");
    }
}

@functions {
    public string OptionTypes(int count, aulease.Entities.Type compType)
    {
        if (count < 1 || !compType.Equals(Types.Monitor))
        { 
            AuleaseEntities db = new AuleaseEntities();

            string res = "";
            string open = @"<option>";
            string close = @"</option>";

            foreach (string type in db.Types.ToList().Where(n => !n.Equals(Types.Printer) && !n.Equals(Types.Shipping) && !n.Equals(Types.Warranty) && !n.Equals(Types.Insurance)).Select(n => n.Name))
            {
                res += open + type + close;
            }

            return res;
        }
        else
        {
            return @"<option>Monitor</option>";
        }
    }
}